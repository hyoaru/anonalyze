/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as AccountIndexImport } from './routes/account/index'
import { Route as ThreadsThreadIdImport } from './routes/threads/$threadId'
import { Route as AuthenticationSignUpImport } from './routes/authentication/sign-up'
import { Route as AuthenticationSignInImport } from './routes/authentication/sign-in'
import { Route as AuthenticationResetPasswordImport } from './routes/authentication/reset-password'
import { Route as AuthenticationForgotPasswordImport } from './routes/authentication/forgot-password'
import { Route as AccountUpdatePasswordImport } from './routes/account/update-password'
import { Route as AccountUpdateInformationImport } from './routes/account/update-information'
import { Route as AccountUpdateEmailImport } from './routes/account/update-email'
import { Route as ThreadsThreadIdPostsImport } from './routes/threads/$threadId_.posts'
import { Route as ThreadsThreadIdPostsNewImport } from './routes/threads/$threadId_.posts_.new'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AccountIndexRoute = AccountIndexImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => rootRoute,
} as any)

const ThreadsThreadIdRoute = ThreadsThreadIdImport.update({
  id: '/threads/$threadId',
  path: '/threads/$threadId',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationSignUpRoute = AuthenticationSignUpImport.update({
  id: '/authentication/sign-up',
  path: '/authentication/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationSignInRoute = AuthenticationSignInImport.update({
  id: '/authentication/sign-in',
  path: '/authentication/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationResetPasswordRoute =
  AuthenticationResetPasswordImport.update({
    id: '/authentication/reset-password',
    path: '/authentication/reset-password',
    getParentRoute: () => rootRoute,
  } as any)

const AuthenticationForgotPasswordRoute =
  AuthenticationForgotPasswordImport.update({
    id: '/authentication/forgot-password',
    path: '/authentication/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)

const AccountUpdatePasswordRoute = AccountUpdatePasswordImport.update({
  id: '/account/update-password',
  path: '/account/update-password',
  getParentRoute: () => rootRoute,
} as any)

const AccountUpdateInformationRoute = AccountUpdateInformationImport.update({
  id: '/account/update-information',
  path: '/account/update-information',
  getParentRoute: () => rootRoute,
} as any)

const AccountUpdateEmailRoute = AccountUpdateEmailImport.update({
  id: '/account/update-email',
  path: '/account/update-email',
  getParentRoute: () => rootRoute,
} as any)

const ThreadsThreadIdPostsRoute = ThreadsThreadIdPostsImport.update({
  id: '/threads/$threadId_/posts',
  path: '/threads/$threadId/posts',
  getParentRoute: () => rootRoute,
} as any)

const ThreadsThreadIdPostsNewRoute = ThreadsThreadIdPostsNewImport.update({
  id: '/threads/$threadId_/posts_/new',
  path: '/threads/$threadId/posts/new',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/account/update-email': {
      id: '/account/update-email'
      path: '/account/update-email'
      fullPath: '/account/update-email'
      preLoaderRoute: typeof AccountUpdateEmailImport
      parentRoute: typeof rootRoute
    }
    '/account/update-information': {
      id: '/account/update-information'
      path: '/account/update-information'
      fullPath: '/account/update-information'
      preLoaderRoute: typeof AccountUpdateInformationImport
      parentRoute: typeof rootRoute
    }
    '/account/update-password': {
      id: '/account/update-password'
      path: '/account/update-password'
      fullPath: '/account/update-password'
      preLoaderRoute: typeof AccountUpdatePasswordImport
      parentRoute: typeof rootRoute
    }
    '/authentication/forgot-password': {
      id: '/authentication/forgot-password'
      path: '/authentication/forgot-password'
      fullPath: '/authentication/forgot-password'
      preLoaderRoute: typeof AuthenticationForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/authentication/reset-password': {
      id: '/authentication/reset-password'
      path: '/authentication/reset-password'
      fullPath: '/authentication/reset-password'
      preLoaderRoute: typeof AuthenticationResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/authentication/sign-in': {
      id: '/authentication/sign-in'
      path: '/authentication/sign-in'
      fullPath: '/authentication/sign-in'
      preLoaderRoute: typeof AuthenticationSignInImport
      parentRoute: typeof rootRoute
    }
    '/authentication/sign-up': {
      id: '/authentication/sign-up'
      path: '/authentication/sign-up'
      fullPath: '/authentication/sign-up'
      preLoaderRoute: typeof AuthenticationSignUpImport
      parentRoute: typeof rootRoute
    }
    '/threads/$threadId': {
      id: '/threads/$threadId'
      path: '/threads/$threadId'
      fullPath: '/threads/$threadId'
      preLoaderRoute: typeof ThreadsThreadIdImport
      parentRoute: typeof rootRoute
    }
    '/account/': {
      id: '/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountIndexImport
      parentRoute: typeof rootRoute
    }
    '/threads/$threadId_/posts': {
      id: '/threads/$threadId_/posts'
      path: '/threads/$threadId/posts'
      fullPath: '/threads/$threadId/posts'
      preLoaderRoute: typeof ThreadsThreadIdPostsImport
      parentRoute: typeof rootRoute
    }
    '/threads/$threadId_/posts_/new': {
      id: '/threads/$threadId_/posts_/new'
      path: '/threads/$threadId/posts/new'
      fullPath: '/threads/$threadId/posts/new'
      preLoaderRoute: typeof ThreadsThreadIdPostsNewImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardRoute
  '/account/update-email': typeof AccountUpdateEmailRoute
  '/account/update-information': typeof AccountUpdateInformationRoute
  '/account/update-password': typeof AccountUpdatePasswordRoute
  '/authentication/forgot-password': typeof AuthenticationForgotPasswordRoute
  '/authentication/reset-password': typeof AuthenticationResetPasswordRoute
  '/authentication/sign-in': typeof AuthenticationSignInRoute
  '/authentication/sign-up': typeof AuthenticationSignUpRoute
  '/threads/$threadId': typeof ThreadsThreadIdRoute
  '/account': typeof AccountIndexRoute
  '/threads/$threadId/posts': typeof ThreadsThreadIdPostsRoute
  '/threads/$threadId/posts/new': typeof ThreadsThreadIdPostsNewRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardRoute
  '/account/update-email': typeof AccountUpdateEmailRoute
  '/account/update-information': typeof AccountUpdateInformationRoute
  '/account/update-password': typeof AccountUpdatePasswordRoute
  '/authentication/forgot-password': typeof AuthenticationForgotPasswordRoute
  '/authentication/reset-password': typeof AuthenticationResetPasswordRoute
  '/authentication/sign-in': typeof AuthenticationSignInRoute
  '/authentication/sign-up': typeof AuthenticationSignUpRoute
  '/threads/$threadId': typeof ThreadsThreadIdRoute
  '/account': typeof AccountIndexRoute
  '/threads/$threadId/posts': typeof ThreadsThreadIdPostsRoute
  '/threads/$threadId/posts/new': typeof ThreadsThreadIdPostsNewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardRoute
  '/account/update-email': typeof AccountUpdateEmailRoute
  '/account/update-information': typeof AccountUpdateInformationRoute
  '/account/update-password': typeof AccountUpdatePasswordRoute
  '/authentication/forgot-password': typeof AuthenticationForgotPasswordRoute
  '/authentication/reset-password': typeof AuthenticationResetPasswordRoute
  '/authentication/sign-in': typeof AuthenticationSignInRoute
  '/authentication/sign-up': typeof AuthenticationSignUpRoute
  '/threads/$threadId': typeof ThreadsThreadIdRoute
  '/account/': typeof AccountIndexRoute
  '/threads/$threadId_/posts': typeof ThreadsThreadIdPostsRoute
  '/threads/$threadId_/posts_/new': typeof ThreadsThreadIdPostsNewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/dashboard'
    | '/account/update-email'
    | '/account/update-information'
    | '/account/update-password'
    | '/authentication/forgot-password'
    | '/authentication/reset-password'
    | '/authentication/sign-in'
    | '/authentication/sign-up'
    | '/threads/$threadId'
    | '/account'
    | '/threads/$threadId/posts'
    | '/threads/$threadId/posts/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/dashboard'
    | '/account/update-email'
    | '/account/update-information'
    | '/account/update-password'
    | '/authentication/forgot-password'
    | '/authentication/reset-password'
    | '/authentication/sign-in'
    | '/authentication/sign-up'
    | '/threads/$threadId'
    | '/account'
    | '/threads/$threadId/posts'
    | '/threads/$threadId/posts/new'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/dashboard'
    | '/account/update-email'
    | '/account/update-information'
    | '/account/update-password'
    | '/authentication/forgot-password'
    | '/authentication/reset-password'
    | '/authentication/sign-in'
    | '/authentication/sign-up'
    | '/threads/$threadId'
    | '/account/'
    | '/threads/$threadId_/posts'
    | '/threads/$threadId_/posts_/new'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  DashboardRoute: typeof DashboardRoute
  AccountUpdateEmailRoute: typeof AccountUpdateEmailRoute
  AccountUpdateInformationRoute: typeof AccountUpdateInformationRoute
  AccountUpdatePasswordRoute: typeof AccountUpdatePasswordRoute
  AuthenticationForgotPasswordRoute: typeof AuthenticationForgotPasswordRoute
  AuthenticationResetPasswordRoute: typeof AuthenticationResetPasswordRoute
  AuthenticationSignInRoute: typeof AuthenticationSignInRoute
  AuthenticationSignUpRoute: typeof AuthenticationSignUpRoute
  ThreadsThreadIdRoute: typeof ThreadsThreadIdRoute
  AccountIndexRoute: typeof AccountIndexRoute
  ThreadsThreadIdPostsRoute: typeof ThreadsThreadIdPostsRoute
  ThreadsThreadIdPostsNewRoute: typeof ThreadsThreadIdPostsNewRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  DashboardRoute: DashboardRoute,
  AccountUpdateEmailRoute: AccountUpdateEmailRoute,
  AccountUpdateInformationRoute: AccountUpdateInformationRoute,
  AccountUpdatePasswordRoute: AccountUpdatePasswordRoute,
  AuthenticationForgotPasswordRoute: AuthenticationForgotPasswordRoute,
  AuthenticationResetPasswordRoute: AuthenticationResetPasswordRoute,
  AuthenticationSignInRoute: AuthenticationSignInRoute,
  AuthenticationSignUpRoute: AuthenticationSignUpRoute,
  ThreadsThreadIdRoute: ThreadsThreadIdRoute,
  AccountIndexRoute: AccountIndexRoute,
  ThreadsThreadIdPostsRoute: ThreadsThreadIdPostsRoute,
  ThreadsThreadIdPostsNewRoute: ThreadsThreadIdPostsNewRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/dashboard",
        "/account/update-email",
        "/account/update-information",
        "/account/update-password",
        "/authentication/forgot-password",
        "/authentication/reset-password",
        "/authentication/sign-in",
        "/authentication/sign-up",
        "/threads/$threadId",
        "/account/",
        "/threads/$threadId_/posts",
        "/threads/$threadId_/posts_/new"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/account/update-email": {
      "filePath": "account/update-email.tsx"
    },
    "/account/update-information": {
      "filePath": "account/update-information.tsx"
    },
    "/account/update-password": {
      "filePath": "account/update-password.tsx"
    },
    "/authentication/forgot-password": {
      "filePath": "authentication/forgot-password.tsx"
    },
    "/authentication/reset-password": {
      "filePath": "authentication/reset-password.tsx"
    },
    "/authentication/sign-in": {
      "filePath": "authentication/sign-in.tsx"
    },
    "/authentication/sign-up": {
      "filePath": "authentication/sign-up.tsx"
    },
    "/threads/$threadId": {
      "filePath": "threads/$threadId.tsx"
    },
    "/account/": {
      "filePath": "account/index.tsx"
    },
    "/threads/$threadId_/posts": {
      "filePath": "threads/$threadId_.posts.tsx"
    },
    "/threads/$threadId_/posts_/new": {
      "filePath": "threads/$threadId_.posts_.new.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
